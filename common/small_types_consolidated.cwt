
types = {
	type[great_project] = {
		path = "game/common/great_projects"
	}
	type[faction] = {
		path = "game/common/factions"
	}
	type[fervor] = {
		path = "game/common/fervor"
	}
	type[cult] = {
		path = "game/common/fetishist_cults"
	}
	type[revolt_trigger] = {
		path = "game/common/revolt_triggers"
	}
	type[insult] = {
		path = "game/common/insults"
	}
	type[natives] = {
		path = "game/common/natives"
	}
	type[decree] = {
		path = "game/common/decrees"
	}
	type[isolationism] = {
		path = "game/common/isolationism"
	}
	type[naval_doctrine] = {
		path = "game/common/naval_doctrines"
	}
	type[policy] = {
		path = "game/common/policies"
	}
	type[professionalism_modifier] = {
		path = "game/common/professionalism"
	}
	type[edict] = {
		path = "game/common/state_edicts"
	}
	type[trade_company] = {
		path = "game/common/trade_companies"
	}
}


great_project = {
	ambient_object = <ambient_object> #todo
	province = enum[province_ids]
	is_canal = yes
	time = int
	
	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}
}


faction = {
	monarch_power = enum[power_types]
	always = yes
	
	## cardinality = 0..1
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}
}


fervor = {
	cost = int
	effect = {
		alias_name[modifier] = alias_match_left[modifier]
	}
	## replace_scope = { root = country this = country }
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}


cult = {
	alias_name[modifier] = alias_match_left[modifier]
	sprite = int
	## replace_scope = { root = country this = country }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## replace_scope = { root = country this = country }
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}

## replace_scope = { root = province this = province }
revolt_trigger = {
	## replace_scope = { root = province this = province }
	alias_name[trigger] = alias_match_left[trigger]
}

insult = {
	## replace_scope = { root = country this = country from = country }
	trigger = {
		alias_name[trigger] = alias_match_left[trigger]
	}
}



natives = {
	graphical_culture = <graphical_culture>
	color = {
		## cardinality = 3..3
		int[0..255]
	}
	icon = int
	
	unit = <unit_type>
	
	provinces = {
		## cardinality = 1..inf
		enum[province_ids]
	}
}


decree = {
	cost = int
	duration = int
	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}
	## replace_scope = { root = country this = country from = country }
	###ai_will_do has to be 10 for AI to do it (with >=99 Meritocracy).
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}


isolationism = {
	isolation_value = int[0..inf]

	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}
}



naval_doctrine = {
	## replace_scope = { root = country this = country from = country }
	can_select = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	country_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}
	
	button_gfx = int
}


policy = {
	monarch_power = enum[power_types]

	## replace_scope = { this = country root = country }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## replace_scope = { this = country root = country }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	
	alias_name[modifier] = alias_match_left[modifier]

	## replace_scope = { this = country root = country }
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]		
	}
}

professionalism_modifier = {
	## cardinality = 0..1
	hidden = yes
	army_professionalism = float[0.0..1.0]

	marker_sprite = scalar #todo: sprite
	unit_sprite_start = scalar #todo: sprite

	trigger = {
		always = yes
	}
	
	alias_name[modifier] = alias_match_left[modifier]
	
	## cardinality = 0..1
	may_build_supply_depot = yes
	## cardinality = 0..1
	may_refill_garrison = yes
	## cardinality = 0..1
	may_return_manpower_on_disband = yes
	## cardinality = 0..1
	reserves_organisation = yes
}



edict = {
	## replace_scope = { root = province this = province }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	
	## replace_scope = { root = province this = province }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	
	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}
	
	color = {
		## cardinality = 3..3
		int[0..255
	}
	
	## replace_scope = { root = province this = province }
	##has to be around at least 10 to be picked (depends on maintenance cost and general economy)
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}


trade_company = {
	color = {
		## cardinality = 3..3
		int[0..255
	}
	
	provinces = {
		## cardinality = 1..inf
		enum[province_ids]
	}
	
	## cardinality = 1..inf
	names = {
		## cardinality = 0..1
		## replace_scope = { root = country this = country }
		trigger = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		name = localisation #todo: there is something special about this. i.e. Root_Culture_GetName turned up in the name
	}
}
