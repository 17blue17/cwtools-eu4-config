
types = {
	type[religion_group] = {
		path = "game/common/religions"
	}
	## type_key_filter <> religious_schools
	type[religion] = {
		path = "game/common/religions"	
		skip_root_key = any
	}
	type[personal_deity] = {
		path = "game/common/personal_deities"
	}
	type[religion_propagation] = {
		path = "game/common/religious_conversions"
		subtype[trading_policy] = {
			trading_policy = yes
		}
	}
	type[religious_reform_group] = {
		path = "game/common/religious_reforms"
	}
}


enums = {
	complex_enum[orthodox_icons] = {
		path = "game/common/religions"
		name = {
			scalar = {
				orthodox_icons = {
					enum_name = {
					}
				}
			}
		}
	}
	complex_enum[papal_policies] = {
		path = "game/common/religions"
		name = {
			scalar = {
				papacy = {
					enum_name = {
					}
				}
			}
		}
	}
	complex_enum[religious_schools] = {
		path = "game/common/religions"
		name = {
			religious_schools = {
				enum_name = {
				}
			}
		}
	}
}


religion_group = {
	## cardinality = 0..1
	defender_of_faith = yes
	
	## cardinality = 0..1
	can_form_personal_unions = yes
	
	## cardinality = 0..1
	ai_will_propagate_through_trade = yes
	
	## cardinality = 0..1
	center_of_religion = <province_id>

	## cardinality = 0..1
	flags_with_emblem_percentage = int[0..100]
	## cardinality = 0..1
	flag_emblem_index_range = {
		## cardinality = 2..2
		int
	}
	
	## cardinality = 0..1
	harmonized_modifier = <event_modifier>
	
	crusade_name = localisation
	
	## cardinality = 0..1
	religious_schools = {
		## cardinality = 0..inf
		scalar = {
			## replace_scope = { this = country root = country }
			potential_invite_scholar = { 
				alias_name[trigger] = alias_match_left[trigger]
			}
			
			## replace_scope = { this = country root = country from = country }
			can_invite_scholar = { 
				alias_name[trigger] = alias_match_left[trigger]
			}
			
			## replace_scope = { this = country root = country from = country }
			on_invite_scholar = { 
				alias_name[effect] = alias_match_left[effect]
			}
			
			### If you don't set this it will expand on_invite_scholar effect which might be super big
			invite_scholar_modifier_display = <static_modifier>
			
			picture = <sprite>
			
			alias_name[modifier] = alias_match_left[modifier]
		}
	}
	
	#Religions are inside here
	## cardinality = 0..inf
	<religion> = {
		## cardinality = 0..1
		harmonized_modifier = <event_modifier>
		
		## cardinality = 0..1
		flags_with_emblem_percentage = int[0..100]
		## cardinality = 0..1
		flag_emblem_index_range = {
			## cardinality = 2..2
			int
		}

		icon = int
		color = {
			## cardinality = 3..3
			int[0..255]
		}
		## cardinality = 0..1
		country = {
			alias_name[modifier] = alias_match_left[modifier]
		}
		## cardinality = 0..1
		country_as_secondary = {
			alias_name[modifier] = alias_match_left[modifier]
		}
		
		## cardinality = 0..1
		province = {
			alias_name[modifier] = alias_match_left[modifier] #todo
		}
		
		## cardinality = 0..1
		can_have_secondary_religion = yes
		
		## cardinality = 0..1
		personal_deity = yes
		
		## cardinality = 0..1
		doom = yes
		
		## cardinality = 0..1
		declare_war_in_regency = yes
		
		## cardinality = 0..1
		authority = yes
		
		## cardinality = 0..1
		fetishist_cult = yes
				
		## cardinality = 0..1
		uses_isolationism = yes
		
		## cardinality = 0..1
		uses_harmony = yes
		
		## cardinality = 0..1
		uses_karma = yes
		
		## cardinality = 0..1
		uses_piety = yes
		
		## cardinality = 0..1
		misguided_heretic = yes
		
		## cardinality = 0..1
		holy_sites = {
			## cardinality = 1..inf
			<province_id>
		}
		
		## cardinality = 0..1
		blessings = {
			<aspects_and_blessings.blessing>
		}
	
		## cardinality = 0..1
		has_patriarchs = yes
		
		## cardinality = 0..1
		date = date_field
	
		## cardinality = 0..1
		fervor = yes
		
		## cardinality = 0..1
		orthodox_icons = {
			## cardinality = 0..inf
			scalar = {
				alias_name[modifier] = alias_match_left[modifier]
				
				allow = {
					alias_name[trigger] = alias_match_left[trigger]
				}
				ai_will_do = {
					factor = float
					alias_name[modifier_rule] = alias_match_left[modifier_rule]
				}
			}
		}
		
		
		## cardinality = 0..1
		uses_anglican_power = yes				# Uses church power/aspect mechanics
		## cardinality = 0..1
		uses_church_power = yes				# Uses church power/aspect mechanics
		## cardinality = 0..1
		aspects = {
			<aspects_and_blessings.church_aspect>
		}
		## cardinality = 0..1
		aspects_name = localisation
		
		## cardinality = 0..1
		hre_heretic_religion = yes
		
		## cardinality = 0..1
		## replace_scope = { this = country root = country }
		will_get_center = {
			alias_name[trigger] = alias_match_left[trigger]
		}
	
		
		## cardinality = 0..1
		religious_reforms = yes
		## cardinality = 0..1
		reform_tooltip = localisation
	
		
		## cardinality = 0..1
		allowed_conversion = {
			## cardinality = 1..inf
			<religion>
		}
	
		## cardinality = 0..1
		allowed_center_conversion = {
			## cardinality = 1..inf
			<religion>
		}
		
		## cardinality = 0..1
		on_convert = {
			alias_name[effect] = alias_match_left[effect]
		}
		
		## cardinality = 0..1
		hre_religion = yes
		
		## cardinality = 0..1
		papacy = {
			papal_tag = enum[country_tags]
			election_cost = int
			seat_of_papacy = <province_id>
			
			## cardinality = 1..inf
			scalar = {
				cost = int[0..100]
				
				## replace_scope = { this = country root = country }
				potential = {
					alias_name[trigger] = alias_match_left[trigger]
				}
				
				## replace_scope = { this = country root = country }
				allow = {
					alias_name[trigger] = alias_match_left[trigger]
				}
				
				## replace_scope = { this = country root = country }
				effect = {
					alias_name[effect] = alias_match_left[effect]
				}
				
				ai_will_do = {
					factor = float
					alias_name[modifier_rule] = alias_match_left[modifier_rule]
				}
			}
		}
		
		heretic = {
			## cardinality = 1..inf
			localisation
		}
	}
}



personal_deity = {

	alias_name[modifier] = alias_match_left[modifier]
	
	## replace_scope = { root = country this = country }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	sprite = int
	
	## replace_scope = { root = country this = country }
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}



religion_propagation = {
	
	## cardinality = 0..1
	religion = <religion>

	map_icon = <sprite>

	subtype[trading_policy] = {
		###Religion is taken from country using the trading policy. max_distance is not used.
		trading_policy = yes
	}
	
	subtype[!trading_policy] = {
		###From Center of Reformation center province (default is NDefines::NReligion::MAX_RELIGIOUS_CENTER_SPREAD_DISTANCE).
		max_distance = float
	}
		
	
	base_conversion_speed = float
	
	## replace_scope = { root = province this = province from = country }
	target_province_weights = {
	
		#Will only target provinces within same node
		#From Scope is country using the trading policy
		
		factor = float
		
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}



religious_reform_group = {
	## replace_scope = { root = country this = country }
	trigger = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## replace_scope = { root = country this = country }
	can_buy_idea = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	
	#I don't think these are referred to from elsewhere
	## cardinality = 5..5
	localisation = {
		alias_name[modifier] = alias_match_left[modifier]
		
		alias_name[ability] = alias_match_left[ability]
	}
	
	## replace_scope = { root = country this = country }
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}
